import rclpy
from rclpy.node import Node
import serial 
import math

from sensor_msgs.msg import LaserScan
from std_msgs.msg import Header


class CamsenseNode(Node):

    def __init__(self):
        super().__init__('camsense_node')
        self.publisher_ = self.create_publisher(LaserScan, 'scan', 10)
        self.ser = serial.Serial(port="/dev/ttyAMA0", baudrate=115200)

    def publish_message():
        num_points = 400
        scan = LaserScan()
        scan.header = Header()
        scan.header.stamp = self.get_clock().now().to_msg()
        scan.header.frame_id = 'laser_frame'
        
        scan.angle_min = 0
        scan.angle_max = 2 * math.pi
        scan.angle_increment = self.angle_increment
        scan.time_increment = 0.0
        scan.scan_time = 0.1
        
        scan.range_min = 0
        scan.range_max = 10
        
        scan.ranges = [1.0] * num_points
        scan.intensities = [1.0] * num_points

        self.publisher.publish(scan)
        self.get_logger().info('Published fake LaserScan with %d points' % num_points)


def main(args=None):
    rclpy.init(args=args)

    camsense_x1_node = CamsenseNode()

    rclpy.spin(camsense_x1_node)

    camsense_x1_node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()